// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4930.TestBotEncoding;
    
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.livewindow.LiveWindowSendable;
import edu.wpi.first.wpilibj.CANTalon.ControlMode;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;


import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Encoder encoderQuadratureEncoder1;
    public static Encoder encoderQuadratureEncoder2;
    public static SpeedController driveTrainMotor3;
    public static SpeedController driveTrainMotor4;
    public static SpeedController driveTrainMotor1;
    public static SpeedController driveTrainMotor2;
    public static RobotDrive driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       // encoderQuadratureEncoder1 = new Encoder(0, 1, false, EncodingType.k4X);
       // LiveWindow.addSensor("Encoder", "Quadrature Encoder 1", encoderQuadratureEncoder1);
       // encoderQuadratureEncoder1.setDistancePerPulse(1.0);
       // encoderQuadratureEncoder1.setPIDSourceParameter(PIDSourceParameter.kRate);
       // encoderQuadratureEncoder2 = new Encoder(2, 3, false, EncodingType.k4X);
        //LiveWindow.addSensor("Encoder", "Quadrature Encoder 2", encoderQuadratureEncoder2);
        //encoderQuadratureEncoder2.setDistancePerPulse(1.0);
       // encoderQuadratureEncoder2.setPIDSourceParameter(PIDSourceParameter.kRate);
        CANTalon driveTrainMotor3 = new CANTalon(0);
        
        CANTalon driveTrainMotor4 = new CANTalon(1);
       
        CANTalon driveTrainMotor1 = new CANTalon(2);
        
        CANTalon driveTrainMotor2 = new CANTalon(3);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainMotor3, driveTrainMotor1,
              driveTrainMotor4, driveTrainMotor2);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
